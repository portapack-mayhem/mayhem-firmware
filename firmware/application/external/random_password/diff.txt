firmware/application/external/random_password/ui_random_password.cpp --- 2/3 --- C++
274      * (assume AFSK data is averaged in chaotic space, which m 275      * (assume AFSK data is averaged in chaotic space, which m
... aybe no one can garentee but I hope so)                        ... aybe no one can garentee but I hope so)
275      * */                                                      276      * */
276                                                                277 
...                                                                278     ///v init pw using seeds (unsafe is from std::rand with LC
...                                                                ... G)
277     for (int i = 0; i < password_length * 2; i += 2) {         279     std::string initial_password = "";
278         unsigned int seed = seeds_deque[i];                    280     for (std::size_t i = 0; i < seeds_deque.size() && initial_
...                                                                ... password.length() < password_length; i++) {
...                                                                281         unsigned int index = seeds_deque[i] % charset.length()
...                                                                ... ;
...                                                                282         initial_password += charset[index];
...                                                                283     }
...                                                                284     ///^ init pw using seeds
...                                                                285 
...                                                                286     //v hashed pw using sha512 (worm out the unsafe rand)
279         std::srand(seed);                                      287     std::string hashed_password = sha512(initial_password);
280         uint8_t rollnum = (uint8_t)(seeds_deque[i + 1] % 128); 288     ///^ hashed pw using sha512
...                                                                289 
...                                                                290     //v ensure char types
281         uint8_t nu = 0;                                        291     std::vector<char> password_chars(password_length);
282         for (uint8_t o = 0; o < rollnum; ++o) nu = std::rand() 292     for (int i = 0; i < password_length; i++) {
... ;                                                              ... 
283         nu++;                                                  293         unsigned int index = std::stoul(hashed_password.substr
...                                                                ... (i * 2, 2), nullptr, 16) % charset.length();
...                                                                294         password_chars[i] = charset[index];
...                                                                295     }
...                                                                296 
...                                                                297 
...                                                                298 
...                                                                299     auto ensure_char_type = [&](const std::string& type_chars)
...                                                                ...  {
...                                                                300         if (charset.find_first_of(type_chars) != std::string::
...                                                                ... npos) {
284         char c = charset[std::rand() % charset.length()];      301             char c = type_chars[std::rand() % type_chars.lengt
...                                                                ... h()];
...                                                                302             int pos = std::rand() % password_length;
...                                                                303             password_chars[pos] = c;
...                                                                304         }
...                                                                305     };
...                                                                306 
...                                                                307     if (check_digits.value())
...                                                                308         ensure_char_type("0123456789");
...                                                                309     if (check_latin_lower.value())
...                                                                310         ensure_char_type("abcdefghijklmnopqrstuvwxyz");
...                                                                311     if (check_latin_upper.value())
...                                                                312         ensure_char_type("ABCDEFGHIJKLMNOPQRSTUVWXYZ");
...                                                                313     if (check_punctuation.value())
...                                                                314         ensure_char_type(".,-!?");
...                                                                315 
...                                                                316     ///^ ensure char types
...                                                                317 
...                                                                318 
...                                                                319     for (char c : password_chars) {
285         password += c;                                         320         password += c;
286                                                                ... 
287         if (std::isdigit(c)) {                                 321         if (std::isdigit(c)) {

firmware/application/external/random_password/ui_random_password.cpp --- 3/3 --- C++
293         } else {                                               327         } else {
294             char_type_hints += ",";                            328             char_type_hints += ",";
295         }                                                      329         }
296     }                                                          330     }
297                                                                331 
298     text_generated_passwd.set(password);                       332     text_generated_passwd.set(password);
299     text_char_type_hints.set(char_type_hints);                 333     text_char_type_hints.set(char_type_hints);

